{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","console","log","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAoCeA,MA/Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAE3C,OAAO,yBAAKC,UAAU,SAClB,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,cACX,wBAAIA,UAAU,iBAAiBJ,GAC/B,wBAAII,UAAU,gBAAgBL,GAC9B,wBAAIK,UAAU,iBACTD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,wBAAIC,IAAKD,EAAOL,UAAU,iBACrBI,OAIb,uBAAGJ,UAAU,iBAAiBH,EAAQU,MAAM,EAAG,KAA/C,UCuCGC,G,kNApDXC,MAAQ,CACJC,WAAW,EACXC,OAAQ,I,EAEZC,U,sBAAY,8BAAAC,EAAA,sEACqCC,IAAMC,IAAI,yDAD/C,gBACgBJ,EADhB,EACAK,KAAQA,KAAQL,OAIxB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IACnCQ,QAAQC,IAAI,EAAKV,OANT,2C,kEAYRW,KAAKR,c,+BAEC,IAAD,EACyBQ,KAAKX,MAA3BC,EADH,EACGA,UAAWC,EADd,EACcA,OACnB,OACI,6BAASX,UAAU,aAEXU,EAEI,yBAAKV,UAAU,UACX,0BAAMA,UAAU,eAAhB,eAQA,yBAAKA,UAAU,UACVW,EAAOR,KAAI,SAAAkB,GAAK,OACb,kBAAC,EAAD,CACIf,IAAKe,EAAMC,GACXA,GAAID,EAAMC,GACV3B,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAME,mBACdxB,OAAQsB,EAAMtB,kB,GA5CpCyB,IAAMC,YCAxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0f3d9e12.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n//movies component는 state를 필요로 하지 않는다 => 굳이 class component 사용할 필요 없다.\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n    // return <h4>{title}</h4>;\r\n    return <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie_data\">\r\n            <h3 className=\" movie__title\">{title}</h3>\r\n            <h5 className=\" movie__year\">{year}</h5>\r\n            <ul className=\"movie__genres\">\r\n                {genres.map((genre, index) =>\r\n                    <li key={index} className=\"genres__genre\">\r\n                        {genre}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n            <p className=\"movie_summary\">{summary.slice(0, 180)}...</p>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n//tag 안에 style={{}} : js css사용 가능\r\n//ex) <h3 class=\" movie__title\" style={{backgroundColor: \"red\"}}>{title}</h3>\r\n//index를 넘겨야 한다. Why? => key!\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;\r\n\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        isLoading: true,\r\n        movies: []\r\n    };\r\n    getMovies = async () => {\r\n        const { data: { data: { movies } } } = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\r\n        //movies.data.data.movies => {data: {data: {movies}}} //es6버전\r\n        // this.setState({ movies: movies }); //movies:movies = state의 movies:data의 movies  =>  movies로 해도 js가 이해한다.\r\n        // this.setState({movies}); //isLoading도 수정!\r\n        this.setState({ movies, isLoading: false });\r\n        console.log(this.state);\r\n    }\r\n    componentDidMount() { //이론적으로 componentDidMount에서 data를 fetch하는 것!\r\n        // setTimeout(() => {d\r\n        //     this.setState({ isLoading: false});\r\n        // }, 6000);\r\n        this.getMovies();\r\n    }\r\n    render() {\r\n        const { isLoading, movies } = this.state;\r\n        return (\r\n            <section className=\"container\">\r\n                {\r\n                    isLoading ? (\r\n                        // \"Loading\"\r\n                        <div className=\"loader\">\r\n                            <span className=\"loader_text\">Loading...</span>\r\n                        </div>)\r\n                        :\r\n                        // movies.map(movie => {\r\n                        //     // console.log(movie);\r\n                        //     return <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} />\r\n\r\n                        (\r\n                            <div className=\"movies\">\r\n                                {movies.map(movie => (\r\n                                    <Movie\r\n                                        key={movie.id}\r\n                                        id={movie.id}\r\n                                        year={movie.year}\r\n                                        title={movie.title}\r\n                                        summary={movie.summary}\r\n                                        poster={movie.medium_cover_image}\r\n                                        genres={movie.genres}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                }</section>)\r\n    }\r\n}\r\n//jsx에서는 class대신 className\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n//jsx: js안의 HTML\n//react application은 한 번에 하나의 component만 rendering할 수 있다."],"sourceRoot":""}